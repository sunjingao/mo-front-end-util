{"version":3,"file":"mo-front-end-util.js","sources":["../package/reg/phone.ts","../package/reg/special-char.ts","../package/antd/validator/password-validator.ts"],"sourcesContent":["// 手机号\r\nexport const phoneReg = /^1[3456789]\\d{9}$/;\r\n","// 特殊字符\r\nexport const specialCharReg = /[\\(\\)\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\-\\+\\=\\_\\|\\{\\}\\[\\]\\:\\;\\'\\<\\>\\,\\.\\?\\\\]/;\r\n","import { specialCharReg } from '@/reg/special-char';\r\n\r\n// 密码校验，长度为12-30，包含数字、字母、特殊字符，适用于ant-design-vue的form表单验证\r\nexport function passwordValidatorAntd(_, value) {\r\n  if (value.length < 12 || value.length > 30) {\r\n    return Promise.reject('长度需为12-30位');\r\n  }\r\n\r\n  const regLetter = /[a-zA-Z]/; // 字母\r\n  const regNumber = /[0-9]/; // 数字\r\n  for (let index = 0; index < value.length; index++) {\r\n    if (\r\n      !regLetter.test(value[index]) &&\r\n      !regNumber.test(value[index]) &&\r\n      !specialCharReg.test(value[index])\r\n    ) {\r\n      return Promise.reject(new Error('必须为字母、数字或符号'));\r\n    }\r\n  }\r\n\r\n  if (!regLetter.test(value) || !regNumber.test(value) || !specialCharReg.test(value)) {\r\n    return Promise.reject(new Error('必须包含字母、数字或符号'));\r\n  }\r\n\r\n  return Promise.resolve();\r\n}\r\n"],"names":["phoneReg","specialCharReg","passwordValidatorAntd","_","value","regLetter","regNumber","index"],"mappings":"AACO,MAAMA,IAAW,qBCAXC,IAAiB;ACEd,SAAAC,EAAsBC,GAAGC,GAAO;AAC9C,MAAIA,EAAM,SAAS,MAAMA,EAAM,SAAS;AAC/B,WAAA,QAAQ,OAAO,YAAY;AAGpC,QAAMC,IAAY,YACZC,IAAY;AAClB,WAASC,IAAQ,GAAGA,IAAQH,EAAM,QAAQG;AAEtC,QAAA,CAACF,EAAU,KAAKD,EAAMG,CAAK,CAAC,KAC5B,CAACD,EAAU,KAAKF,EAAMG,CAAK,CAAC,KAC5B,CAACN,EAAe,KAAKG,EAAMG,CAAK,CAAC;AAEjC,aAAO,QAAQ,OAAO,IAAI,MAAM,aAAa,CAAC;AAIlD,SAAI,CAACF,EAAU,KAAKD,CAAK,KAAK,CAACE,EAAU,KAAKF,CAAK,KAAK,CAACH,EAAe,KAAKG,CAAK,IACzE,QAAQ,OAAO,IAAI,MAAM,cAAc,CAAC,IAG1C,QAAQ;AACjB;"}